text_data = readLines("test_output", encoding="UTF-8")
setwd("/Users/throughkim/Documents/py_projects/multicore_korean_analyzer")
text_data = readLines("test_output", encoding="UTF-8")
text_data
text_data = read.table("test_output", encoding="UTF-8")
text_data
library(wordcloud)
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text_data.V1), freq = text_data.V@, min.freq=5, colors = pal, random.order = F)
wordcloud(words = names(text_data), freq = text_data.V2, min.freq=5, colors = pal, random.order = F)
wordcloud(words = names(text_data.V1), freq = text_data.V2, min.freq=5, colors = pal, random.order = F)
names(text_data)
text_data.V1
text_data = read.csv("test_output", encoding="UTF-8")
text_data
text_data = read.csv2("test_output", encoding="UTF-8")
text
text_data
for(i in 1:length(text_data)){
print(i)
}
text_data = readLines("test_output", encoding="UTF-8")
for(i in 1:length(text_data)){
print(i)
}
for(i in 1:length(text_data)){
print(i)
text_data[i]
}
text_data = readLines("test_output", encoding="UTF-8")
for(i in 1:length(text_data)){
print(i)
text_data[i]
}
for(i in 1:length(text_data)){
text_data[i]
}
for(i in 1:length(text_data)){
text_data
}
for(i in 1:length(text_data)){
print(text_data[i])
}
for(i in 1:length(text_data)){
print(strsplit(text_data[i], " "))
}
for(i in 1:length(text_data)){
splited = strsplit(text_data[i], " ")
print(splited[1])
}
for(i in 1:length(text_data)){
splited = strsplit(text_data[i], " ")
print(splited[0])
}
for(i in 1:length(text_data)){
splited = strsplit(text_data[i], " ")
print(splited)
}
text_data = readLines("test_output", encoding="UTF-8")
test_output
text_data
test_output
text_data = readLines("test_output", encoding="UTF-8")
text_data
library(tdm)
library(tm)
text.tdm = TermDocumentMatrix(Corpus(VectorSource(park)))
text.tdm = TermDocumentMatrix(Corpus(VectorSource(text_data)))
text.tdm
text.m <- as.matrix(text.tdm) ## tdm -> matrix
text.m
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text_data.V1), freq = text_data, min.freq=5, colors = pal, random.order = F)
library(wordcloud)
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F)
d
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F, family="Apple Gothic")
library(wordcloud)
#MacFonts(malgun=WindowFont("Apple Gothic"))
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F, family="Apple Gothic")
text_data = readLines("test_output", encoding="UTF-8")
library(tm)
text.tdm = TermDocumentMatrix(Corpus(VectorSource(text_data)))
text.m <- as.matrix(text.tdm) ## tdm -> matrix
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
#MacFonts(malgun=WindowFont("Apple Gothic"))
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F)
text_data = readLines("test_output")
text_data = readLines("test_output", encoding="UTF-8")
library(tm)
text.tdm = TermDocumentMatrix(Corpus(VectorSource(text_data)))
text.m <- as.matrix(text.tdm) ## tdm -> matrix
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
#MacFonts(malgun=WindowFont("Apple Gothic"))
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F)
text_data = readLines("test_output")
library(tm)
text.tdm = TermDocumentMatrix(Corpus(VectorSource(text_data)))
text.m <- as.matrix(text.tdm) ## tdm -> matrix
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
#MacFonts(malgun=WindowFont("Apple Gothic"))
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F)
text_data = readLines("test_output", encoding="UTF-8")
library(tm)
text.tdm = TermDocumentMatrix(Corpus(VectorSource(text_data)))
text.m <- as.matrix(text.tdm) ## tdm -> matrix
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
#MacFonts(malgun=WindowFont("Apple Gothic"))
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F)
text_data = readLines("test_output", encoding="UTF-8")
library(tm)
text.tdm = TermDocumentMatrix(Corpus(VectorSource(text_data)))
text.m <- as.matrix(text.tdm) ## tdm -> matrix
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
#MacFonts(malgun=WindowFont("Apple Gothic"))
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F)
text_data = readLines("test_output", encoding="UTF-8")
library(tm)
text.tdm = TermDocumentMatrix(Corpus(VectorSource(text_data)))
text.m <- as.matrix(text.tdm) ## tdm -> matrix
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
#MacFonts(malgun=WindowFont("Apple Gothic"))
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F)
#MacFonts(malgun=MacFont("Apple Gothic"))
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F, famil=malgun)
MacFonts(malgun=MacFont("Apple Gothic"))
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F, famil="Apple Gothic")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F, famil="AppleGothic")
warnings()
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F, family="AppleGothic")
text_data = readLines("total_output", encoding="UTF-8")
library(tm)
text.tdm = TermDocumentMatrix(Corpus(VectorSource(text_data)))
text.m <- as.matrix(text.tdm) ## tdm -> matrix
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F, family="AppleGothic")
View(text.m)
text_data = readLines("total_output", encoding="UTF-8")
library(tm)
text.tdm = TermDocumentMatrix(Corpus(VectorSource(text_data)))
text.m <- as.matrix(text.tdm) ## tdm -> matrix
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
pal <- brewer.pal(6, "Dark2")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, min.freq=5, colors = pal, random.order = F, family="AppleGothic")
text.m
text.wordFreq
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
library(wordcloud)
text.wordFreq <- sort(rowSums(text.m), decreasing = F)
text.wordFreq
text.wordFreq <- rowSums(text.m)
text.wordFreq
text_data = read.table("total_output", encoding="UTF-8")
text_data
wc = sort(text_data,decreasing = T)
wc
wc = sort(text_data, decreasing = T)
un_text = unlist(text_data)
un_text
wc = sort(un_text, decreasing = T)
wc
wordcloud(words = names(wc), freq = wc, colors = pal, random.order = F, family="AppleGothic")
wc
names(wc)
un_text = table(unlist(text_data))
un_text
wc = sort(un_text, decreasing = T)
wordcloud(words = names(wc), freq = wc, colors = pal, random.order = F, family="AppleGothic")
wordcloud(words = names(text.wordFreq), freq = text.wordFreq, random.order = F, family="AppleGothic")
pal <- brewer.pal(6, "Set3")
wordcloud(words = names(wc), freq = wc, colors = pal, random.order = F, family="AppleGothic")
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5 random.order = F, family="AppleGothic")
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, family="AppleGothic")
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, family="AppleGothic", rot.per = 0)
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, family="AppleGothic", rot.per = 0, scale=c(10,5)
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, family="AppleGothic", rot.per = 0, scale=c(100,5)
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, family="AppleGothic", rot.per = 0, scale=c(100,5))
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, family="AppleGothic", rot.per = 0, scale=c(10,5))
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, family="AppleGothic", rot.per = 0, scale=c(10,1))
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, family="AppleGothic", rot.per = 0, scale=c(7,1))
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, random.color = T, family="AppleGothic", rot.per = 0, scale=c(7,1))
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, random.color = T, family="AppleGothic", rot.per = 0.1, scale=c(7,1))
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, random.color = T, family="AppleGothic", rot.per = 0, scale=c(7,1))
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, random.color = T, family="AppleGothic", rot.per = 0, scale=c(7,1))
pal <- brewer.pal(6, "Dark")
wordcloud(words = names(wc), freq = wc, colors = pal, min.freq = 5, random.order = F, random.color = T, family="AppleGothic", rot.per = 0, scale=c(7,1))
exit()
q()
